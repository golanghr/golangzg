{
    "language": "en-US",
    "messages": [
        {
            "id": "Welcome to i18n",
            "message": "Welcome to i18n",
            "translation": "Welcome to i18n",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Payment = {PaymentCode}",
            "message": "Payment = {PaymentCode}",
            "translation": "Payment = {PaymentCode}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "PaymentCode",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "paymentCode"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Revenue = {Revenue}",
            "message": "Revenue = {Revenue}",
            "translation": "Revenue = {Revenue}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Revenue",
                    "string": "%[1]f",
                    "type": "float64",
                    "underlyingType": "float64",
                    "argNum": 1,
                    "expr": "revenue"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Int = {I} \t Float = {F}",
            "message": "Int = {I} \t Float = {F}",
            "translation": "Int = {I} \t Float = {F}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "I",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "i"
                },
                {
                    "id": "F",
                    "string": "%.2[2]f",
                    "type": "float64",
                    "underlyingType": "float64",
                    "argNum": 2,
                    "expr": "f"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Int = {Decimali} \t Float = {Decimalf} \t Percent = {Percentp}",
            "message": "Int = {Decimali} \t Float = {Decimalf} \t Percent = {Percentp}",
            "translation": "Int = {Decimali} \t Float = {Decimalf} \t Percent = {Percentp}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Decimali",
                    "string": "%[1]v",
                    "type": "golang.org/x/text/number.Formatter",
                    "underlyingType": "struct{*golang.org/x/text/number.options; value interface{}}",
                    "argNum": 1,
                    "expr": "number.Decimal(i)"
                },
                {
                    "id": "Decimalf",
                    "string": "%[2]v",
                    "type": "golang.org/x/text/number.Formatter",
                    "underlyingType": "struct{*golang.org/x/text/number.options; value interface{}}",
                    "argNum": 2,
                    "expr": "number.Decimal(f)"
                },
                {
                    "id": "Percentp",
                    "string": "%[3]v",
                    "type": "golang.org/x/text/number.Formatter",
                    "underlyingType": "struct{*golang.org/x/text/number.options; value interface{}}",
                    "argNum": 3,
                    "expr": "number.Percent(p)"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Decimal width = {FormatWidth15}",
            "message": "Decimal width = {FormatWidth15}",
            "translation": "Decimal width = {FormatWidth15}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "FormatWidth15",
                    "string": "%[1]v",
                    "type": "golang.org/x/text/number.Formatter",
                    "underlyingType": "struct{*golang.org/x/text/number.options; value interface{}}",
                    "argNum": 1,
                    "expr": "number.Decimal(f, number.FormatWidth(15))"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Decimal pad   = {Pad}",
            "message": "Decimal pad   = {Pad}",
            "translation": "Decimal pad   = {Pad}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Pad",
                    "string": "%[1]v",
                    "type": "golang.org/x/text/number.Formatter",
                    "underlyingType": "struct{*golang.org/x/text/number.options; value interface{}}",
                    "argNum": 1,
                    "expr": "number.Decimal(f, number.FormatWidth(15), number.Pad('#'))"
                }
            ],
            "fuzzy": true
        }
    ]
}