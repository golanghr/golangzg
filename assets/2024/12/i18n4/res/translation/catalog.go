// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translation

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"de_DE": &dictionary{index: de_DEIndex, data: de_DEData},
		"en_US": &dictionary{index: en_USIndex, data: en_USData},
		"hr_HR": &dictionary{index: hr_HRIndex, data: hr_HRData},
	}
	fallback := language.MustParse("en-US")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"\t Decimal pad   = %v\n":                     6,
	"\t Decimal width = %v\n":                     5,
	"\t Int = %d \t Float = %.2f\n":               3,
	"\t Int = %v \t Float = %v \t Percent = %v\n": 4,
	"Payment = %s\n":                              1,
	"Revenue = %f\n":                              2,
	"Welcome to i18n\n":                           0,
}

var de_DEIndex = []uint32{ // 8 elements
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
} // Size: 56 bytes

const de_DEData string = ""

var en_USIndex = []uint32{ // 8 elements
	0x00000000, 0x00000015, 0x0000002a, 0x0000003f,
	0x00000064, 0x00000099, 0x000000b6, 0x000000d3,
} // Size: 56 bytes

const en_USData string = "" + // Size: 211 bytes
	"\x04\x00\x01\x0a\x10\x02Welcome to i18n\x04\x00\x01\x0a\x10\x02Payment =" +
	" %[1]s\x04\x00\x01\x0a\x10\x02Revenue = %[1]f\x04\x02\x09 \x01\x0a\x1e" +
	"\x02Int = %[1]d \x09 Float = %.2[2]f\x04\x02\x09 \x01\x0a.\x02Int = %[1]" +
	"v \x09 Float = %[2]v \x09 Percent = %[3]v\x04\x02\x09 \x01\x0a\x16\x02De" +
	"cimal width = %[1]v\x04\x02\x09 \x01\x0a\x16\x02Decimal pad   = %[1]v"

var hr_HRIndex = []uint32{ // 8 elements
	0x00000000, 0x00000018, 0x0000002f, 0x00000043,
	0x00000043, 0x00000043, 0x00000043, 0x00000043,
} // Size: 56 bytes

const hr_HRData string = "" + // Size: 67 bytes
	"\x04\x00\x01\x0a\x13\x02Dobrodošli u i18n\x04\x00\x01\x0a\x12\x02Plaćanj" +
	"e = %[1]s\x04\x00\x01\x0a\x0f\x02Promet = %[1]f"

	// Total table size 446 bytes (0KiB); checksum: DCB1E925
